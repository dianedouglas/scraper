<?php
/**
* Implementation of hook_menu().
*
*/
function myscraper_menu() {
  $items['simplexml'] = array(
    'title' => t('Aquarius Records Reviews'),
    'page callback' => 'scraper',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}

function scraper() {
// Get all records that begin with the letter A.


$html = new DOMDocument();
$url = 'https://web.archive.org/web/20160410015723/http://aquariusrecords.org/cat/f2.html';
@$html->loadHTMLFile($url);
// pre_print($html);


// Empty array to hold all links to return 
$links = array(); 
$ptags = array(); 
$imgs = array(); 

//Loop through each <a> tag in the dom and add it to the link array 
$count = 0;
foreach($html->getElementsByTagName('a') as $link) { 
  if ($count > 116) {
    $links[] = array('url' => $link->getAttribute('href'), 'text' => $link->nodeValue); 
  }
  if ($link->nodeValue === '1') {
    break;
  }
  $count++;
}
array_pop($links);
array_pop($links);
// urls all have .m3u at end
// pre_print($links);
$alphabet = range('a', 'z');
$reviews = array();
$childNodes = array();
$count = 0;
$review_index = 0;
foreach($html->getElementsByTagName('p') as $ptag) { 
  $count++;
  if ($count > 4) {
    // $ptags[] = $ptag->nodeValue;

    foreach ($ptag->childNodes as $node) {
    // for each thing inside a review...
      if ($node->nodeValue) {
        $reviews['review' . $review_index][] = $node->nodeValue;
      }
    }

    foreach ($ptag->getElementsByTagName('img') as $imgnode) {
      if ($imgnode->getAttribute('alt') == 'album cover') {
        $reviews['review' . $review_index][] = $imgnode->getAttribute('src');
      }
    }
    $review_index++;
  }
} 

$formatted_reviews = array();
$link_count = 0;
foreach ($reviews as $key => $review) {
  if ($review['1'] === 'top of page') {
    break;
  }
  $formatted_reviews[$key]['artist'] = $review['1'];
  $formatted_reviews[$key]['title'] = $review['2'];
  $formatted_reviews[$key]['labelinfo'] = $review['3'];
  for($i = 4; $i < count($review); $i++){
    if (!strpos($review[$i], "CURRENTLY OUT OF PRINT")) {
      if(substr($review[$i], 0, 11) === "MPEG Stream"){
        $song_title = substr($review[$i], 13);
        // $song_title = rtrim($song_title, '"');
        $formatted_reviews[$key]['audio'][$song_title] = '';
      } elseif (substr($review[$i], 0, 9) === "RealAudio") {
        $song_title = substr($review[$i], 16);
        // $song_title = rtrim($song_title, '"');
        $formatted_reviews[$key]['audio'][$song_title] = '';
      }else {
        $formatted_reviews[$key]['body'][] = $review[$i];
      }

      if(substr($review[$i], 0, 11) === "MPEG Stream" || substr($review[$i], 0, 9) === "RealAudio") {
        $formatted_reviews[$key]['audio'][$song_title] = $links[$link_count]['url'];
        $link_count++;
      }

    }
  }

}


foreach ($formatted_reviews as $review_index => $review) {
  $image_link = $review['body'][count($review['body']) - 1];
  if(substr($image_link, 0, 5) === "/web/"){
    $formatted_reviews[$review_index]['img'] = $image_link;
    array_pop($formatted_reviews[$review_index]['body']);
  }
}



pre_print($formatted_reviews);

foreach ($formatted_reviews as $review) {
  $node = new StdClass();
  $node->type = 'review';
  $node->status = 1;
  $node->title = $review['title'];
  $node->field_artist = $review['artist'];
  $node->field_label_info = $review['labelinfo'];
  foreach ($formatted_reviews[$key]['body'] as $paragraph) {
    $node->field_review_body[] = $paragraph;
  }
  node_save($node);
}



// loop through all pages.
}

function simple_get_xml($url) {
  $html = new DOMDocument();
  // fetch drupal planet and parse it (@ suppresses warnings).
  @$html->loadHTMLFile($url);
  // convert DOM to SimpleXML
  $xml = simplexml_import_dom($html);
  return $xml;
}

function pre_print($input) {
  print '<pre>';
  print_r($input);
  print '</pre>';
}

?>